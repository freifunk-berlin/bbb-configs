package babeld
config general
	option 'log_file' '/var/log/babeld.log'
	option 'ipv6_subtrees' 'true'
	option 'ubus_bindings' 'true'

config interface
	option 'ifname' 'uplink'
	option 'ignore' 'true'

{% for interface in mesh_links|default([]) %}
config interface
	option 'ifname' '{{ interface['name'] }}'
	option 'rxcost' '{{ '256' if interface.get('link_quality_based_metric', true) else '96' }}'
	option 'split_horizon' '{{ (interface['ptp'] if 'ptp' in interface else false ) | string | lower }}'
	option 'link_quality' '{{ interface.get('link_quality_based_metric', true) | string | lower }}'

config filter
       option 'type' 'in'
       option 'if' '{{ interface['name'] }}'
       option 'action' 'metric {{ interface.get('mesh_metric', 512) }}'

{% endfor %}

{% for gateway in groups['role_uplink_gateway'] | difference([inventory_hostname]) %}
config interface
	option 'ifname' '{{ hostvars[gateway]['gre_tunnel_alias'] }}'
	option 'rxcost' '{{ gre_metric }}'
	option 'split_horizon' 'true'
{% endfor %}

config interface
	option 'rxcost' '{{ tunnel_metric }}'

# Redistribute default route learend from BIRD
config filter
	option 'type'	'redistribute'
	option 'ip'     '::0/0'
	option 'eq'     '0'
	option 'proto'	'12'
	option 'action' 'src-prefix {{ freifunk_global_prefix }}'

config filter
	option 'type'	'redistribute'
	option 'ip'	'{{ ipv6_prefix }}'
	option 'eq'	'{{ ipv6_prefix | ipaddr('prefix') }}'

# Finally Prohibit distribution of all local networks. (.. but allow non-local networks, e.g learned via tunnel)
config filter
	option 'type'	'redistribute'
	option 'local'  'true'
	option 'action' 'deny'
