# IPv4 Soft Migration by priotizing Babel over OLSR
# Static default Route is set by bird
config rule
	option priority 33100
	option lookup 'babel-ff'

config rule
	option priority 33101
	option lookup 'olsr-ff'

config rule
	option priority 33200
	option lookup 'babel-default'

config interface 'loopback'
	option device 'lo'
	option proto 'static'
	option ipaddr '127.0.0.1'
	option netmask '255.0.0.0'
{% if ipv6_prefix is defined %}
	option ip6addr '{{ ipv6_prefix }}'
{% endif %}

config interface 'uplink'
	option device '{{ uplink['ifname'] }}'
	option proto 'static'
	option ipaddr '{{ uplink['ipv4'] }}'
{% if uplink['ipv4'] | ansible.utils.ipaddr('prefix') >= 30 %}
#	option gateway '{{ uplink['ipv4'] | ansible.utils.ipaddr('peer') }}'
{% else %}
#	option gateway '{{ uplink['ipv4'] | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') }}'
{% endif %}
{% if 'ipv6' in uplink %}
	option ip6addr '{{ uplink['ipv6'] }}'
{% endif %}

{% for interface in mesh_links|default([]) %}
config interface '{{ interface['name'] }}'
	option device '{{ interface['ifname'] }}'
	option proto 'static'
	option ipaddr '{{ interface['ipv4'] }}'
{% if interface['ipv6'] is defined %}
	option ip6addr '{{ interface['ipv6'] }}'
{% endif %}
{% endfor %}

{% if mgmt is defined %}
config interface 'mgmt'
	option device '{{ mgmt['ifname'] }}'
	option proto 'static'
	option ipaddr '{{ mgmt['ipv4'] }}'
	option ip6addr '{{ mgmt['ipv6'] }}'
{% endif %}


{% if uplink['ipv4'] | ansible.utils.ipaddr('prefix') >= 30 %}
  {% set ipv4_uplink_gw = uplink['ipv4'] | ansible.utils.ipaddr('peer') %}
{% else %}
  {% set ipv4_uplink_gw = uplink['ipv4'] | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') %}
{% endif %}

# gre doesnt support _ in name
{% for gateway in groups['role_gateway'] | difference([inventory_hostname]) | sort %}
{% set name = hostvars[gateway]['gre_tunnel_alias'] %}

config route 'route_gre_{{ name }}'
	option interface 'uplink'
	option target '{{ hostvars[gateway]['uplink']['ipv4'] | ansible.utils.ipaddr('address') }}/32'
	option gateway '{{ ipv4_uplink_gw }}'

config interface '{{ name }}'
	option proto 'gre'
	option ipaddr '{{ uplink['ipv4'] | ansible.utils.ipaddr('address') }}'
	option peeraddr '{{ hostvars[gateway]['uplink']['ipv4'] | ansible.utils.ipaddr('address') }}'
	option mtu '1476'

config interface '{{ name }}_ip'
	option proto 'static'
	option device '@{{ name }}'
	option ip6addr '{{ gre_base_prefix | ansible.utils.nthhost(loop.index) }}/128'

{% endfor %}
