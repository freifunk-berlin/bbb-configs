config system
        option hostname '{{ inventory_hostname }}'
        option zonename '{{ zonename }}'
        option timezone '{{ timezone }}'
        option ttylogin '0'
        option log_size '64'
        option urandom_seed '0'
        option compat_version '9.9' # hardcoded to a bbb-configs exclusive version identifier, matches patch in image builder, because we dont retain device config.
{% if role == 'corerouter' or role  == 'gateway' %}
	option latitude '{{ latitude|default(0) }}'
	option longitude '{{ longitude|default(0) }}'
	option altitude '{{ altitude|default(60.000000000000000) }}'
	option location '{{ location_nice|default(location) }}'
{% endif %}

config timeserver 'ntp'
        option enabled '1'
        option enable_server '{{ (role == 'corerouter' or role  == 'gateway') | int }}'
{% if networks is defined %}
{% set mgmtnetwork = networks | selectattr('role', 'equalto', 'mgmt') | default([], true) | list | first %}
{% endif %}
{% if role == 'ap' and mgmtnetwork is defined and 'ntp' in mgmtnetwork %}
        list server '{{ mgmtnetwork['prefix'] | ansible.utils.ipaddr(mgmtnetwork['ntp']) | ansible.utils.ipaddr('address') }}'
{% else %}
{% for ntp_server in ntp_servers %}
        list server '{{ ntp_server }}'
{% endfor %}
{% endif %}

{% for led in leds | default([]) %}

config led 'led_{{ led['name'] }}'
        option name '{{ led['name'] }}'
        option sysfs '{{ led['sysfs'] }}'
        option trigger '{{ led['trigger'] }}'
{% if led['port_mask'] is defined %}
        option port_mask '{{ '0x%0x' % led['port_mask'] }}'
{% endif %}
{% if led['mode'] is defined %}
        option mode '{{ led['mode'] }}'
{% endif %}
{% if led['dev'] is defined %}
        option mode '{{ led['dev'] }}'
{% endif %}
{% endfor %}

{% for poe in poe_ports | default([]) %}

config gpio_switch 'poe_power_port{{ loop.index0 }}'
        option name '{{ poe['name'] }}'
        option gpio_pin '{{ poe['gpio_pin'] }}'
{% if (loop.index0) in poe_on|default([]) %}
        option value '{{ 0 if poe['value'] else 1 }}'
{% else %}
        option value '{{ poe['value'] }}'
{% endif %}
{% endfor %}
