#jinja2: trim_blocks: "true", lstrip_blocks: "true"
{% for network in networks | selectattr('tunnel_wan_ip', 'defined') %}
  {% set name = network['name'] if 'name' in network else network['role'] %}
  {% set bridge_name = 'br-' + name %}
config tunnelmanager '{{ name }}'
	option interface '{{ (bridge_name if bridge_name | length <= 15) | mandatory('The generated inteface name exceeds the 15 characters limit of the linux kernel. Try to shorten the name to resolve this.') }}'
	option namespace '{{ network['tunnel_namespace']|default(name) }}'
	option mtu '{{ network['tunnel_mtu']|default(1412) }}'
	option uplink_ip '{{ network['tunnel_wan_ip'] }}'
	option uplink_gateway '{{ network['tunnel_wan_gw'] }}'
	option tunnel_count '{{ network['tunnel_connections']|default(2) }}'
	option tunnel_timeout '{{ network['tunnel_timeout']|default(160) }}'
	option check_interval '{{ network['tunnel_check_interval']|default(30) }}'
	option up_script '{{ network['tunnel_up_script']|default('/usr/share/tunnelman/up.sh') }}'
	option up_script_args '{{ network['tunnel_up_script_args']|default(network['tunnel_mesh_prefix_ipv4']) }} 12800 0.4'
	option down_script '{{ network['tunnel_down_script']|default('/usr/share/tunnelman/down.sh') }}'
  {% for gateway in groups['role_gateway'] %}
        # {{ gateway }}
	list tunnel_endpoints '{{ hostvars[gateway]['uplink']['ipv4'] | ansible.utils.ipaddr('address') }}'
  {% endfor %}
{% endfor %}
