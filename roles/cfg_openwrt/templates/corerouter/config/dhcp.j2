#jinja2: trim_blocks: "true", lstrip_blocks: "true"
config dnsmasq
	option domainneeded '1'
	option localise_queries '1'
	option rebind_protection '1'
	option rebind_localhost '1'
	option local '/lan/'
	option domain 'lan'
	option expandhosts '1'
	option authoritative '1'
	option readethers '1'
	option localservice '1'
	option noping '{{ dhcp_no_ping|int if dhcp_no_ping is defined else 1 }}'
	option quietdhcp '1'

{% for network in networks | rejectattr('role', 'in', ['ext', 'mesh']) %}
    {% set name = network['name'] if 'name' in network else network['role'] %}

config dhcp 'dhcp_{{ name }}'
	option ignore '0'
	option interface '{{ name }}'
	option ra 'server'
	option dhcpv6 'disabled'
    {% if network['role'] == 'dhcp' %}
	option dhcpv4 'server'
	option force '1'
	option leasetime '5m'
	option start '2'
	option limit '{{ network['prefix'] | ipaddr('size') -3 }}'
	list dhcp_option '119,olsr'
    {% else %}
	option dhcpv4 'disabled'
    {% endif %}


{% if not network.get('no_corerouter_dns_record') %}
config domain 'frei_funk_{{ name }}'
	option name 'frei.funk'
	option ip '{{ network['prefix'] | ipaddr(network['assignments'][inventory_hostname]) | ipaddr('address') }}'
    {% endif %}
{% endfor %}

{% for network in networks | selectattr('role','in', ['ext', 'mesh']) %}
    {% set name = network['name'] if 'name' in network else network['role'] %}
config dhcp 'dhcp_{{ name }}'
	option interface '{{ name }}'
	option ignore '1'

{% endfor %}

{% for network in networks | selectattr('role','equalto','dhcp') %}
    {% for assignment in network['assignments'] %}
config host
	option name '{{ assignment }}'
	option ip '{{ network['prefix'] | ipaddr(network['assignments'][assignment]) | ipaddr('address') }}'
    {% endfor %}
{% endfor %}

config odhcpd 'odhcpd'
	option maindhcp '0'
	option leasefile '/tmp/hosts/odhcpd'
	option leasetrigger '/usr/sbin/odhcpd-update'
	option loglevel '4'
